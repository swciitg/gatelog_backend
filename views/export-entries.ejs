<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8"/>
  <meta name="viewport" content="width=device-width,initial-scale=1.0"/>
  <title>Export Khokha Entries</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"/>
  <style>
    body { background:#f4f6f8; }
    .container { max-width: 1100px; background:#fff; margin-top: 30px; padding: 24px; border-radius: 12px; box-shadow: 0 8px 16px rgba(0,0,0,.08); }
    .section { border:1px solid #e9ecef; padding:16px; border-radius:10px; background:#fafafa; }
    .table-wrap { border:1px solid #e9ecef; border-radius:10px; overflow: hidden; }
    /* clickable preview rows */
    #previewBody tr { cursor: pointer; }
    #previewBody tr:hover { background: rgba(25,135,84,.06); }
    .kv { width: 48%; }
    @media (max-width: 768px){ .kv{ width: 100%; } }
  </style>
</head>
<body>
<div class="container">
  <div class="d-flex justify-content-between align-items-center mb-3">
    <h3 class="m-0">Export Khokha Entries</h3>
    <a class="btn btn-outline-secondary" href="<%= BASE_URL %>/entries">← Back</a>
  </div>

  <div id="alertBox" class="alert d-none" role="alert"></div>

  <!-- Filters -->
  <form id="filterForm" method="POST" action="<%= BASE_URL %>/entries/export">
    <input type="hidden" name="page" id="page" value="1"/>
    <input type="hidden" name="limit" id="limit" value="25"/>

    <div class="section mb-3">
      <h5 class="mb-3">Date Filter</h5>
      <div class="row g-3">
        <div class="col-md-4">
          <label class="form-label">Date Field</label>
          <select class="form-select" name="dateField" id="dateField" required>
            <option value="createdAt">Created At</option>
            <option value="checkOutTime">Check-Out Time</option>
            <option value="checkInTime">Check-In Time</option>
          </select>
        </div>
        <div class="col-md-4">
          <label class="form-label">From</label>
          <input type="datetime-local" class="form-control" name="from" id="from" required/>
        </div>
        <div class="col-md-4">
          <label class="form-label">To</label>
          <input type="datetime-local" class="form-control" name="to" id="to" required/>
        </div>
      </div>
    </div>

    <div class="section mb-3">
      <h5 class="mb-3">Filters (optional)</h5>
      <div class="row g-3">
        <div class="col-md-6">
          <label class="form-label">Name (contains)</label>
          <input type="text" class="form-control" name="name" id="name"/>
        </div>
        <div class="col-md-6">
          <label class="form-label">Roll Number (exact)</label>
          <input type="text" class="form-control" name="rollNumber" id="rollNumber"/>
        </div>

        <div class="col-md-6">
          <label class="form-label">Hostel</label>
          <select class="form-select" name="hostel" id="hostel">
            <option value="">Any</option>
            <% hostels.forEach(h => { %>
              <option value="<%= h %>"><%= h %></option>
            <% }) %>
          </select>
        </div>
        <div class="col-md-6">
          <label class="form-label">Room Number (exact)</label>
          <input type="text" class="form-control" name="roomNumber" id="roomNumber"/>
        </div>

        <div class="col-md-6">
          <label class="form-label">Destination (contains)</label>
          <input type="text" class="form-control" name="destination" id="destination"/>
        </div>
        <div class="col-md-6">
          <label class="form-label">Exit Gate</label>
          <select class="form-select" name="checkOutGate" id="checkOutGate">
            <option value="">Any</option>
            <option value="Main_Gate">Main_Gate</option>
            <option value="KV_Gate">KV_Gate</option>
            <option value="Khoka_Gate">Khoka_Gate</option>
          </select>
        </div>

        <div class="col-md-6">
          <label class="form-label">Check-In Gate</label>
          <select class="form-select" name="checkInGate" id="checkInGate">
            <option value="">Any</option>
            <option value="Main_Gate">Main_Gate</option>
            <option value="KV_Gate">KV_Gate</option>
            <option value="Khoka_Gate">Khoka_Gate</option>
            <option value="AUTO_CLOSED">AUTO_CLOSED</option>
          </select>
        </div>
        <div class="col-md-6">
          <label class="form-label">Status</label>
          <select class="form-select" name="isClosed" id="isClosed">
            <option value="">Any</option>
            <option value="true">Closed</option>
            <option value="false">Open</option>
          </select>
        </div>
      </div>

      <div class="d-flex gap-2 mt-3">
        <button id="previewBtn" class="btn btn-primary" type="button">
          <span id="pvSpin" class="spinner-border spinner-border-sm me-2 d-none"></span>
          Preview Results
        </button>
        <button class="btn btn-success" type="submit">Export Filtered</button>
      </div>
      <div class="form-text mt-1">Preview shows a paginated view; export uses all rows matching these filters.</div>
    </div>
  </form>

  <!-- Preview table -->
  <div class="section">
    <h5 class="mb-3">Preview (click a row for details)</h5>
    <div class="table-wrap">
      <table class="table table-striped table-hover mb-0">
        <thead class="table-light">
          <tr>
            <th>#</th>
            <th>Name</th>
            <th>Roll</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Hostel</th>
            <th>Room</th>
            <th>Destination</th>
            <th>Check-Out</th>
            <th>Exit Gate</th>
            <th>Check-In</th>
            <th>Check-In Gate</th>
            <th>Status</th>
          </tr>
        </thead>
        <tbody id="previewBody">
          <tr><td colspan="13" class="text-center text-muted">No data yet. Click “Preview Results”.</td></tr>
        </tbody>
      </table>
    </div>

    <!-- Pagination -->
    <div class="d-flex justify-content-between align-items-center mt-2">
      <div class="text-muted" id="previewMeta"></div>
      <div class="btn-group">
        <button id="prevPage" class="btn btn-outline-secondary btn-sm" type="button" disabled>Prev</button>
        <button id="nextPage" class="btn btn-outline-secondary btn-sm" type="button" disabled>Next</button>
      </div>
    </div>
  </div>
</div>

<!-- Details Modal -->
<div class="modal fade" id="entryDetailsModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">
          Entry Details
          <small class="text-muted d-block fs-6" id="modalSubTitle"></small>
        </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body">
        <div class="d-flex flex-wrap gap-3">
          <div class="kv">
            <div class="mb-2"><strong>Name:</strong> <span id="md_name"></span></div>
            <div class="mb-2"><strong>Roll Number:</strong> <span id="md_roll"></span></div>
            <div class="mb-2"><strong>Email:</strong> <span id="md_email"></span></div>
            <div class="mb-2"><strong>Phone:</strong> <span id="md_phone"></span></div>
            <div class="mb-2"><strong>Hostel:</strong> <span id="md_hostel"></span></div>
            <div class="mb-2"><strong>Room:</strong> <span id="md_room"></span></div>
          </div>
          <div class="kv">
            <div class="mb-2"><strong>Destination:</strong> <span id="md_dest"></span></div>
            <div class="mb-2"><strong>Check-Out Time:</strong> <span id="md_co_time"></span></div>
            <div class="mb-2"><strong>Exit Gate:</strong> <span id="md_co_gate"></span></div>
            <div class="mb-2"><strong>Check-In Time:</strong> <span id="md_ci_time"></span></div>
            <div class="mb-2"><strong>Check-In Gate:</strong> <span id="md_ci_gate"></span></div>
            <div class="mb-2"><strong>Status:</strong> <span id="md_status"></span></div>
          </div>
        </div>
      </div>

      <div class="modal-footer">
        <button class="btn btn-secondary" data-bs-dismiss="modal" type="button">Close</button>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
  const BASE_URL = '<%= BASE_URL %>';

  const alertBox = document.getElementById('alertBox');
  function showAlert(type, msg) {
    alertBox.className = 'alert alert-' + type;
    alertBox.textContent = msg;
    alertBox.classList.remove('d-none');
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }
  function hideAlert(){ alertBox.classList.add('d-none'); }

  function formToJson(form) {
    const fd = new FormData(form);
    const obj = {};
    fd.forEach((v, k) => { obj[k] = v; });
    return obj;
  }

  function fmt(dt) {
    if (!dt) return '';
    try { return new Date(dt).toLocaleString(); } catch { return dt; }
  }

  const form = document.getElementById('filterForm');
  const previewBtn = document.getElementById('previewBtn');
  const pvSpin = document.getElementById('pvSpin');
  const bodyEl = document.getElementById('previewBody');
  const metaEl = document.getElementById('previewMeta');
  const prevBtn = document.getElementById('prevPage');
  const nextBtn = document.getElementById('nextPage');
  const pageEl = document.getElementById('page');
  const limitEl = document.getElementById('limit');

  // Cache last preview page to power modal
  let lastPreview = [];   // array of entries
  let lastPage = 1;
  let lastLimit = 25;
  let lastTotal = 0;

  async function loadPreview() {
    hideAlert();
    previewBtn.disabled = true; pvSpin.classList.remove('d-none');

    const payload = formToJson(form);
    try {
      const res = await fetch(`${BASE_URL}/entries/export/preview`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload),
      });
      if (!res.ok) {
        const t = await res.text();
        throw new Error(t || 'Preview failed');
      }
      const data = await res.json();
      renderPreview(data);
    } catch (e) {
      bodyEl.innerHTML = `<tr><td colspan="13" class="text-danger text-center">${e.message}</td></tr>`;
      metaEl.textContent = '';
      lastPreview = [];
    } finally {
      previewBtn.disabled = false; pvSpin.classList.add('d-none');
    }
  }

  function renderPreview({ total, page, limit, results }) {
    lastPreview = results || [];
    lastPage = page;
    lastLimit = limit;
    lastTotal = total;

    if (!results || results.length === 0) {
      bodyEl.innerHTML = `<tr><td colspan="13" class="text-center text-muted">No matching entries.</td></tr>`;
      metaEl.textContent = '0 results';
      prevBtn.disabled = true; nextBtn.disabled = true;
      return;
    }

    bodyEl.innerHTML = results.map((r, i) => `
      <tr data-index="${i}">
        <td>${(page - 1) * limit + i + 1}</td>
        <td>${r.name || ''}</td>
        <td>${r.rollNumber || ''}</td>
        <td>${r.outlookEmail || ''}</td>
        <td>${r.phoneNumber || ''}</td>
        <td>${r.hostel || ''}</td>
        <td>${r.roomNumber || ''}</td>
        <td>${r.destination || ''}</td>
        <td>${fmt(r.checkOutTime)}</td>
        <td>${r.checkOutGate || ''}</td>
        <td>${fmt(r.checkInTime)}</td>
        <td>${r.checkInGate || ''}</td>
        <td>${r.isClosed ? 'Closed' : 'Open'}</td>
      </tr>
    `).join('');

    const start = (page - 1) * limit + 1;
    const end = Math.min(page * limit, total);
    metaEl.textContent = `Showing ${start}–${end} of ${total}`;

    prevBtn.disabled = page <= 1;
    nextBtn.disabled = page * limit >= total;
  }

  previewBtn.addEventListener('click', () => {
    pageEl.value = '1';
    loadPreview();
  });

  prevBtn.addEventListener('click', () => {
    const page = Math.max(parseInt(pageEl.value, 10) - 1, 1);
    pageEl.value = String(page);
    loadPreview();
  });

  nextBtn.addEventListener('click', () => {
    const page = parseInt(pageEl.value, 10) + 1;
    pageEl.value = String(page);
    loadPreview();
  });

  // Defaults for date range (today)
  (function setDefaultDates(){
    const from = document.getElementById('from');
    const to   = document.getElementById('to');
    const now = new Date();
    const start = new Date(now); start.setHours(0,0,0,0);
    const end = new Date(now);   end.setHours(23,59,59,999);
    const fix = (d)=>{ d.setMinutes(d.getMinutes() - d.getTimezoneOffset()); return d.toISOString().slice(0,16); };
    from.value = fix(start);
    to.value   = fix(end);
  })();

  // Row → modal
  bodyEl.addEventListener('click', (e) => {
    const tr = e.target.closest('tr[data-index]');
    if (!tr) return;
    const idx = parseInt(tr.getAttribute('data-index'), 10);
    const r = lastPreview[idx];
    if (!r) return;

    // Fill modal
    document.getElementById('modalSubTitle').textContent =
      `${r.name || '—'} (${r.rollNumber || '—'})`;

    document.getElementById('md_name').textContent   = r.name || '—';
    document.getElementById('md_roll').textContent   = r.rollNumber || '—';
    document.getElementById('md_email').textContent  = r.outlookEmail || '—';
    document.getElementById('md_phone').textContent  = r.phoneNumber || '—';
    document.getElementById('md_hostel').textContent = r.hostel || '—';
    document.getElementById('md_room').textContent   = r.roomNumber || '—';

    document.getElementById('md_dest').textContent    = r.destination || '—';
    document.getElementById('md_co_time').textContent = fmt(r.checkOutTime) || '—';
    document.getElementById('md_co_gate').textContent = r.checkOutGate || '—';
    document.getElementById('md_ci_time').textContent = fmt(r.checkInTime) || '—';
    document.getElementById('md_ci_gate').textContent = r.checkInGate || '—';
    document.getElementById('md_status').textContent  = r.isClosed ? 'Closed' : 'Open';

    const modal = new bootstrap.Modal(document.getElementById('entryDetailsModal'));
    modal.show();
  });
</script>
</body>
</html>
